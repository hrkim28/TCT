package Algorithm;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * @date 19.11.26
 * @desc 악성코드 파일 제거와 관련된 배열 알고리즘 문제
 * @author 박병진
 * @version 1.0.0
 */
public class MalWare {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.println("파일목록을 입력해주세요");
		String[] fileArray = sc.nextLine().split("\\s");
		sc.close();

		List<String> fileList = getFirstCode(fileArray); //1단계 악성코드 제거

		System.out.println("[1단계 악성코드가 제거된 목록]");
		System.out.println(fileList);

		List<String> result = getSecondCode(fileList); //2단계 악성코드 제거

		System.out.println("[2단계 악성코드가 제거된 목록]");
		System.out.println(result);
	}

	/**
	 * 1단계 악성코드 제거를 진행하는 Method
	 * 배열을 Loop돌면서 "."을 포함한 경우만 List Collection에 추가
	 * cf) Scanner를 통해 받는값이 배열이기 때문에 이를 List로 옮기기 위해서는 
	 *     Loop를 한번 더 실행해야 했기 때문에 Parameter를 배열로 받고 배열자체를 Loop돌면서 Logic 수행
	 * @param fileArray 입력받은 File목록
	 * @return List<String>
	 */
	public static List<String> getFirstCode(String[] fileArray) {
		List<String> fileList = new ArrayList<String>();
		for (int i = 0; i < fileArray.length; i++) {
			if (fileArray[i].contains("."))
				fileList.add(fileArray[i]);
		}
		return fileList;
	}

	/**
	 * 2단계 악성코드 제거를 진행하는 Method
	 * <악성코드 판별 조건>
	 * 파일명에 a 혹은 x가 포함된 경우 악성코드로 판별
	 * But 다음과 같은 경우 제외
	 * 1. ab로 이어지는 경우
	 * 2. xy로 이어지는 경우
	 * 3. ax로 이어지는 경우
	 * Loop를 돌면서 해당조건을 악성코드가 아닌 경우에만 List에 추가해서 결과값 반환
	 * 
	 * @param fileList 1단계 악성코드를 제외한 목록
	 * @return List<String>
	 */
	public static List<String> getSecondCode(List<String> fileList) {

		List<String> result = new ArrayList<String>();
		for (String code : fileList) {
			if (code.contains("a") || code.contains("x")) {
				if (code.contains("ax") || code.contains("ab") || code.contains("xy")) {
					result.add(code);
				}
			} else
				result.add(code);
		}
		return result;
	}
}
