package com.tctstudy;

public class TCT_20190130_HeeJeongKim {

	/*
	 * 
	2018년에 이어, 2019년에도 코드 몬스터가 개최된다! 	코드 몬스터에서 빠질 수 없는 것은 바로 상금이다. 
	2018년에 개최된 제1회 코드 몬스터에서는, 본선 진출자 100명 중 21명에게 아래와 같은 기준으로 상금을 부여하였다.
	--------------------
	순위	상금	       인원
	1등	500만원	1명
	2등	300만원	2명
	3등	200만원	3명
	4등	50만원	    4명
	5등	30만원	    5명
	6등	10만원	    6명

	
	2019년에 개최될 제2회 코드 몬스터에서는 상금의 규모가 확대되어, 
	본선 진출자 64명 중 31명에게 아래와 같은 기준으로 상금을 부여할 예정이다.
	--------------------
	순위	상금	인원
	1등	512만원	1명
	2등	256만원	2명
	3등	128만원	4명
	4등	64만원	    8명
	5등	32만원	  16명
	
	승우는 자신이 코드 몬스터에 출전하여 받을 수 있을 상금이 얼마인지 궁금해졌다. 
	그는 자신이 두 번의 코드 몬스터 본선 대회에서 얻을 수 있을 총 상금이 얼마인지 알아보기 위해, 
	상상력을 발휘하여 아래와 같은 가정을 하였다.
	제1회 코드 몬스터 본선에 진출하여 a등(1 ≤ a ≤ 100)등을 하였다. 단, 진출하지 못했다면 a = 0으로 둔다.
	제2회 코드 몬스터 본선에 진출하여 b등(1 ≤ b ≤ 64)등을 할 것이다. 단, 진출하지 못했다면 b = 0으로 둔다.
	승우는 이러한 가정에 따라, 자신이 받을 수 있는 총 상금이 얼마인지를 알고 싶어한다.
	
	2. 입력
	첫 번째 줄에 승우가 상상력을 발휘하여 가정한 횟수 T(1 ≤ T ≤ 1,000)가 주어진다.
	다음 T개 줄에는 한 줄에 하나씩 승우가 해본 가정에 대한 정보가 주어진다. 
	각 줄에는 두 개의 음이 아닌 정수 a(0 ≤ a ≤ 100)와 b(0 ≤ b ≤ 64)가 공백 하나를 사이로 두고 주어진다.
	
	3. 출력
	각 가정이 성립할 때 승우가 받을 상금을 원 단위의 정수로 한 줄에 하나씩 출력한다. 입력이 들어오는 순서대로 출력해야 한다.
	
	4. 예제 입력
	6
	8 4
	13 19
	8 10
	18 18
	8 25
	13 16
	
	5. 예제 출력
	1780000
	620000
	1140000
	420000
	820000
	620000 
	 * 
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int rank_first[][] = {{1,5000000}, {2,3000000}, {3,2000000}, {4,500000}, {5,300000}, {6,100000}};
		int rank_sec[][] = {{1,5120000}, {2,2560000}, {4,1280000}, {8,640000}, {16,320000}};

		int input_t = 6;
		int rank_a[][] = {{8,0}, {13,0}, {8,0}, {18,0}, {8,0}, {13,0}};
		int rank_b[][] = {{4,0}, {19,0}, {10,0}, {18,0}, {25,0}, {16,0}};

		int total_rank = 0;
		for (int a=0; a<rank_a.length; a++) {
			total_rank = 0;
			for (int idx_f=0; idx_f <rank_first.length; idx_f++) {
				total_rank = total_rank + rank_first[idx_f][0];
				if (total_rank > rank_a[a][0]) {
					rank_a[a][1]= rank_first[idx_f][1];
					break;
				}
		    }
		}
			
		for (int b=0; b<rank_b.length; b++) {
				total_rank = 0;
				for (int idx_s=0; idx_s <rank_sec.length; idx_s++) {
					total_rank = total_rank + rank_sec[idx_s][0];
					if (total_rank > rank_b[b][0]) {
						rank_b[b][1]= rank_sec[idx_s][1];
						break;
					}
			   }
		}
		
		for (int i=0; i<rank_a.length; i++) {
			System.out.println(rank_a[i][1]+rank_b[i][1]);
		}
			
	}

}
